# This is the main server configuration file. See URL http://www.apache.org/
# for instructions.

# Do NOT simply read the instructions in here without understanding
# what they do, if you are unsure consult the online docs. You have been
# warned.  

# Originally by Rob McCool

<IfModule mod_so.c>
#LoadModule mmap_static_module _MODULES_/mod_mmap_static.so
LoadModule env_module         _MODULES_/mod_env.so
LoadModule config_log_module  _MODULES_/mod_log_config.so
#LoadModule agent_log_module   _MODULES_/mod_log_agent.so
#LoadModule referer_log_module _MODULES_/mod_log_referer.so
#LoadModule mime_magic_module  _MODULES_/mod_mime_magic.so
LoadModule mime_module        _MODULES_/mod_mime.so
LoadModule negotiation_module _MODULES_/mod_negotiation.so
LoadModule status_module      _MODULES_/mod_status.so
LoadModule info_module        _MODULES_/mod_info.so
LoadModule includes_module    _MODULES_/mod_include.so
LoadModule autoindex_module   _MODULES_/mod_autoindex.so
LoadModule dir_module         _MODULES_/mod_dir.so
LoadModule cgi_module         _MODULES_/mod_cgi.so
LoadModule asis_module        _MODULES_/mod_asis.so
LoadModule imap_module        _MODULES_/mod_imap.so
LoadModule action_module      _MODULES_/mod_actions.so
#LoadModule speling_module     _MODULES_/mod_speling.so
LoadModule userdir_module     _MODULES_/mod_userdir.so
LoadModule proxy_module       _MODULES_/libproxy.so
LoadModule alias_module       _MODULES_/mod_alias.so
#LoadModule rewrite_module     _MODULES_/mod_rewrite.so
LoadModule access_module      _MODULES_/mod_access.so
LoadModule auth_module        _MODULES_/mod_auth.so
LoadModule anon_auth_module   _MODULES_/mod_auth_anon.so
#LoadModule dbm_auth_module    _MODULES_/mod_auth_dbm.so
#LoadModule db_auth_module     _MODULES_/mod_auth_db.so
LoadModule digest_module      _MODULES_/mod_digest.so
#LoadModule cern_meta_module   _MODULES_/mod_cern_meta.so
LoadModule expires_module     _MODULES_/mod_expires.so
LoadModule headers_module     _MODULES_/mod_headers.so
LoadModule usertrack_module   _MODULES_/mod_usertrack.so
#LoadModule example_module     _MODULES_/mod_example.so
#LoadModule unique_id_module   _MODULES_/mod_unique_id.so
LoadModule setenvif_module    _MODULES_/mod_setenvif.so

# Extra Modules
#LoadModule php_module         _MODULES_/mod_php.so
#LoadModule php3_module        _MODULES_/libphp3.so
#LoadModule perl_module        _MODULES_/libperl.so

#  Reconstruction of the complete module list from all available modules
#  (static and shared ones) to achieve correct module execution order.
#  [WHENEVER YOU CHANGE THE LOADMODULE SECTION ABOVE UPDATE THIS, TOO]
ClearModuleList
#AddModule mod_mmap_static.c
AddModule mod_env.c
AddModule mod_log_config.c
#AddModule mod_log_agent.c
#AddModule mod_log_referer.c
#AddModule mod_mime_magic.c
AddModule mod_mime.c
AddModule mod_negotiation.c
AddModule mod_status.c
AddModule mod_info.c
AddModule mod_include.c
AddModule mod_autoindex.c
AddModule mod_dir.c
AddModule mod_cgi.c
AddModule mod_asis.c
AddModule mod_imap.c
AddModule mod_actions.c
#AddModule mod_speling.c
AddModule mod_userdir.c
AddModule mod_proxy.c
AddModule mod_alias.c
#AddModule mod_rewrite.c
AddModule mod_access.c
AddModule mod_auth.c
AddModule mod_auth_anon.c
#AddModule mod_auth_dbm.c
#AddModule mod_auth_db.c
AddModule mod_digest.c
#AddModule mod_cern_meta.c
AddModule mod_expires.c
AddModule mod_headers.c
AddModule mod_usertrack.c
#AddModule mod_example.c
#AddModule mod_unique_id.c
AddModule mod_so.c
AddModule mod_setenvif.c
</IfModule>

# ServerType is either inetd, or standalone.

ServerType standalone

# If you are running from inetd, go to "ServerAdmin".

# Port: The port the standalone listens to. For ports < 1023, you will
# need httpd to be run as root initially.

Port _PORT_

# If you wish httpd to run as a different user or group, you must run
# httpd as root initially and it will switch.  

# User/Group: The name (or #number) of the user/group to run httpd as.

User _USER_

# ServerAdmin: Your address, where problems with the server should be
# e-mailed.

ServerAdmin _USER_

ResourceConfig _TESTDIR_/conf/srm.conf
AccessConfig _TESTDIR_/conf/access.conf
LockFile _TESTDIR_/logs/accept.lock

# BindAddress: You can support virtual hosts with this option. This option
# is used to tell the server which IP address to listen to. It can either
# contain "*", an IP address, or a fully qualified Internet domain name.
# See also the VirtualHost directive.

BindAddress *

# ErrorLog: The location of the error log file. If this does not start
# with /, ServerRoot is prepended to it.

ErrorLog _TESTDIR_/logs/error_log

# TransferLog: The location of the transfer log file. If this does not
# start with /, ServerRoot is prepended to it.

TransferLog _TESTDIR_/logs/access_log

# PidFile: The file the server should log its pid to
PidFile _TESTDIR_/logs/httpd.pid

# ServerName allows you to set a host name which is sent back to clients for
# your server if it's different than the one the program would get (i.e. use
# "www" instead of the host's real name).
#
# Note: You cannot just invent host names and hope they work. The name you 
# define here must be a valid DNS name for your host. If you don't understand
# this, ask your network administrator.

ServerName localhost

# CacheNegotiatedDocs: By default, Apache sends Pragma: no-cache with each
# document that was negotiated on the basis of content. This asks proxy
# servers not to cache the document. Uncommenting the following line disables
# this behavior, and proxies will be allowed to cache the documents.

# CacheNegotiatedDocs

# Timeout: The number of seconds before receives and sends time out
#  n.b. the compiled default is 1200 (20 minutes !)

Timeout 400

# Server-pool size regulation.  Rather than making you guess how many
# server processes you need, Apache dynamically adapts to the load it
# sees --- that is, it tries to maintain enough server processes to
# handle the current load, plus a few spare servers to handle transient
# load spikes (e.g., multiple simultaneous requests from a single
# Netscape browser).

# It does this by periodically checking how many servers are waiting
# for a request.  If there are fewer than MinSpareServers, it creates
# a new spare.  If there are more than MaxSpareServers, some of the
# spares die off.  These values are probably OK for most sites ---

MinSpareServers 2
MaxSpareServers 4

# Number of servers to start --- should be a reasonable ballpark figure.

StartServers 2

# Limit on total number of servers running, i.e., limit on the number
# of clients who can simultaneously connect --- if this limit is ever
# reached, clients will be LOCKED OUT, so it should NOT BE SET TOO LOW.
# It is intended mainly as a brake to keep a runaway server from taking
# Unix with it as it spirals down...

MaxClients 30

# MaxRequestsPerChild: the number of requests each child process is
#  allowed to process before the child dies.
#  The child will exit so as to avoid problems after prolonged use when
#  Apache (and maybe the libraries it uses) leak.  On most systems, this
#  isn't really needed, but a few (such as Solaris) do have notable leaks
#  in the libraries.

MaxRequestsPerChild 30

#CookieExpires 10

# VirtualHost: Allows the daemon to respond to requests for more than one
# server address, if your server machine is configured to accept IP packets
# for multiple addresses. This can be accomplished with the ifconfig 
# alias flag, or through kernel patches like VIF.

# Any httpd.conf or srm.conf directive may go into a VirtualHost command.
# See alto the BindAddress entry.
 
#<VirtualHost host.foo.com>
#ServerAdmin webmaster@host.foo.com
#DocumentRoot /www/docs/host.foo.com
#ServerName host.foo.com
#ErrorLog logs/host.foo.com-error_log
#TransferLog logs/host.foo.com-access_log
#</VirtualHost>
